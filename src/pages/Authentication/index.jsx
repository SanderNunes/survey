// src/components/AuthenticationPage.jsx
import React from "react";
import { useAuth } from "@/hooks/useAuth";
import LoginBanner from "../../assets/cuidar.jpg";
import MicrosoftLogo from "../../assets/microsoft.png";
import { Button } from "@material-tailwind/react";
import { useIsAuthenticated } from "@azure/msal-react";
import { Navigate } from "react-router-dom";

const TrianglePattern = ({ className = "", delay = "0.8", ...props }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className={`rsg-js-animate-item pattern-triangle-blue ${className}`}
      data-gsap-delay={delay}
      viewBox="0 0 500 562"
      {...props}
    >
      <g transform="matrix(0.489183, 0, 0, 0.489357, -330.993713, -10.131871)">
        <path
          d="M 1546.79 893.304 C 1549.972 893.304 1553.157 892.776 1556.339 891.185 C 1564.563 887.473 1569.867 879.514 1570.129 870.764 C 1577.821 656.993 1578.089 440.306 1571.194 226.274 C 1570.926 218.052 1566.417 210.627 1559.258 206.649 C 1552.095 202.669 1543.345 202.669 1536.182 206.649 C 1509.397 222.032 1483.403 237.413 1457.413 252.796 C 1302.258 344.298 1155.857 430.494 979.482 472.931 C 969.936 475.318 963.039 483.276 961.712 492.822 C 960.652 502.635 965.692 511.917 974.178 516.425 C 1170.176 616.947 1347.347 734.967 1531.938 887.735 C 1536.182 891.185 1541.486 893.04 1546.79 893.04 M 1525.841 266.852 C 1530.877 451.183 1530.877 637.633 1525.043 821.963 C 1367.5 694.657 1213.94 592.016 1048.176 502.903 C 1205.718 455.691 1339.92 376.655 1481.016 293.375 C 1495.871 284.623 1510.72 275.871 1525.841 267.119"
          fill="#95D4E9"
        />
        <path
          d="M 1625.045 1168.356 C 1627.43 1168.356 1630.085 1167.824 1632.47 1167.028 C 1639.365 1164.378 1644.143 1158.011 1644.938 1150.852 C 1684.986 781.663 1702.754 407.965 1697.98 40.102 C 1697.98 33.473 1694.266 27.109 1688.7 23.659 C 1682.863 20.211 1675.7 19.681 1669.601 22.598 C 1535.668 86.518 1398.811 154.679 1266.2 220.985 C 1133.853 287.024 997 355.451 863.329 419.104 C 834.95 432.633 727.004 442.973 703.135 434.487 C 693.587 431.042 683.244 435.282 678.734 444.3 C 674.226 453.318 677.144 464.195 685.629 469.762 C 999.387 675.042 1311.289 908.969 1612.313 1164.378 C 1616.026 1167.56 1620.534 1169.151 1625.045 1169.151 M 1658.464 72.195 C 1661.645 416.187 1645.202 764.955 1609.131 1110.003 C 1334.891 878.999 1051.901 666.292 767.053 476.393 C 811.081 473.475 859.351 464.989 880.039 455.177 C 1013.974 391.522 1151.093 323.094 1283.44 256.788 C 1406.502 195.258 1533.545 131.871 1658.196 72.195"
          fill="#95D4E9"
        />
      </g>
    </svg>
  );
};

const Pattern5 = ({ className = "pattern5", ...props }) => {
  return (
    <svg
      className={className}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 500 500"
      {...props}
    >
      <defs>
        <clipPath id="clip0_3292_8412">
          <rect width="500" height="500" />
        </clipPath>
      </defs>
      <g transform="matrix(1.204931, 0, 0, 1.204931, -122.643196, 100.037834)">
        <g clipPath="url(#clip0_3292_8412)" transform="matrix(1, 0, 0, 1, 103.859314, -88.022697)">
          <path
            d="M268.979 33.24C226.229 18.74 179.279 14.95 135.659 26.6C92.0495 38.25 52.1795 66.06 29.6595 105.18C15.0595 130.54 8.01946 159.73 5.75946 188.91C0.579462 255.8 22.1195 326.72 72.0395 371.54C109.959 405.58 162.139 422.42 213.029 419.67C263.919 416.92 313.119 395.18 351.309 361.44C365.079 349.27 377.609 335.44 386.539 319.38C394.679 304.75 399.699 288.52 402.619 272.03C413.249 212.14 396.319 149.77 365.949 97.07C351.299 71.64 333.029 47.5 308.409 31.51C282.209 14.49 250.369 7.82004 219.139 7.33004C187.899 6.84004 156.899 12.18 126.119 17.5"
            stroke="#afebff"
            strokeMiterlimit="10"
            strokeLinecap="round"
            fill="rgba(0, 0, 0, 0)"
            strokeWidth="7"
          />
          <path
            d="M248.572 5.36994C235.112 4.75994 221.582 4.77994 208.202 6.36994C145.182 13.8699 88.7416 58.2699 63.3716 116.45C38.0016 174.63 43.1417 244.37 73.6617 300.02C82.8317 316.74 94.2916 332.45 109.012 344.58C136.302 367.07 173.312 375.66 208.552 372.83C243.792 369.99 277.482 356.54 308.202 339.03C324.272 329.87 339.832 319.45 352.602 306.08C376.132 281.45 388.962 247.54 390.412 213.51C391.872 179.48 382.412 145.44 366.062 115.56C339.972 67.8799 295.352 29.9799 243.092 15.0499C190.842 0.0899439 131.552 9.27994 88.0716 41.8899C54.7616 66.8799 31.7116 104.35 21.2616 144.66C10.8216 184.97 12.5517 227.93 23.0316 268.23C34.3516 311.75 57.0716 354.02 94.1716 379.43C131.332 404.89 179.892 410.75 223.752 400.47C267.612 390.19 306.962 364.94 339.192 333.46C348.152 324.71 356.702 315.35 362.882 304.46C368.982 293.7 372.602 281.7 375.082 269.58C388.592 203.7 366.702 130.67 316.292 86.16C265.882 41.65 188.022 29.4499 128.162 60.0899C117.052 65.7699 106.542 72.8399 97.9417 81.8799C86.5417 93.8699 78.8416 109.01 73.7716 124.77C62.4916 159.84 63.8516 198.15 73.0316 233.82C78.3716 254.56 86.3816 274.81 98.6716 292.34C129.012 335.62 184.822 358.22 237.342 352.28C289.862 346.34 337.772 313.66 366.172 269.09C373.622 257.4 379.912 244.7 382.202 231.03C385.392 212.01 380.652 192.53 374.022 174.42C355.122 122.8 319.232 76.3099 270.482 50.9199C221.732 25.5299 159.882 23.5199 112.572 51.5099C96.8716 60.7999 83.0816 73.0099 70.2816 86.0099C55.0716 101.45 40.9317 118.4 32.0617 138.17C23.1917 157.94 7.34165 212.57 14.2516 233.11"
            stroke="#96D3E8"
            strokeMiterlimit="10"
            strokeLinecap="round"
            fill="rgba(0, 0, 0, 0)"
            strokeWidth="7"
          />
        </g>
      </g>
    </svg>
  );
};

const TriangleGreen = ({ className = "", ...props }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    className={`rsg-js-animate-item pattern-triangle-green ${className}`}
    viewBox="0 0 500 500"
    data-gsap-delay="0.5"
    {...props}
  >
    <g transform="matrix(1.219173, 0, 0, 1.219173, 51.47961, 121.116493)">
      <path
        d="M 69.724 150.897 C 68.682 150.897 67.546 150.707 66.598 150.234 C 63.852 149.097 61.863 146.54 61.484 143.509 C 57.127 107.045 57.317 70.392 62.052 34.117 L 59.306 32.223 C 55.517 29.666 54.475 24.457 57.033 20.668 C 58.737 18.016 61.768 16.69 64.704 16.974 C 65.272 13.565 65.936 10.061 66.598 6.651 C 67.451 2.105 71.902 -0.832 76.354 0.116 C 80.9 0.968 83.836 5.325 82.983 9.871 C 81.942 15.27 80.995 20.668 80.142 26.067 L 158.753 78.727 C 161.12 80.337 162.541 83.083 162.446 85.924 C 162.352 88.861 160.742 91.418 158.184 92.839 C 129.108 109.224 101.168 128.071 75.028 148.908 C 73.512 150.139 71.713 150.707 69.819 150.707 M 77.68 44.441 C 74.649 71.718 74.27 99.184 76.638 126.651 C 96.433 111.686 117.08 97.764 138.39 85.167 L 77.774 44.536 L 77.68 44.441 Z"
        fill="#4CB060"
      />
      <path
        d="M 34.595 212.266 C 33.458 212.266 32.322 212.077 31.185 211.509 C 28.249 210.183 26.355 207.342 26.26 204.216 C 23.514 127.879 23.419 50.499 25.881 -25.933 C 25.976 -28.869 27.586 -31.521 30.143 -32.942 C 32.701 -34.363 35.826 -34.363 38.383 -32.942 C 47.949 -27.449 57.231 -21.955 66.513 -16.462 C 121.919 16.214 174.199 46.995 237.183 62.149 C 240.592 63.001 243.055 65.843 243.528 69.252 C 243.907 72.757 242.108 76.071 239.077 77.681 C 169.085 113.577 105.818 155.724 39.899 210.278 C 38.383 211.509 36.489 212.172 34.595 212.172 M 42.077 -11.443 C 40.277 54.382 40.277 120.965 42.361 186.789 C 98.62 141.328 153.458 104.674 212.652 72.851 C 156.394 55.993 108.47 27.768 58.083 -1.971 C 52.779 -5.097 47.475 -8.222 42.077 -11.348"
        fill="#4CB060"
      />
      <path
        d="M 6.649 310.487 C 5.796 310.487 4.849 310.297 3.997 310.013 C 1.534 309.066 -0.171 306.793 -0.455 304.236 C -14.756 172.398 -21.102 38.949 -19.397 -92.416 C -19.397 -94.784 -18.071 -97.057 -16.082 -98.288 C -13.998 -99.519 -11.441 -99.709 -9.263 -98.667 C 38.566 -75.842 87.437 -51.501 134.793 -27.823 C 182.054 -4.24 230.925 20.196 278.66 42.927 C 288.794 47.757 327.342 51.451 335.866 48.42 C 339.275 47.189 342.969 48.704 344.579 51.924 C 346.189 55.145 345.148 59.028 342.117 61.017 C 230.073 134.324 118.692 217.859 11.195 309.066 C 9.869 310.203 8.259 310.771 6.649 310.771 M -5.285 -80.956 C -6.422 41.885 -0.549 166.431 12.331 289.65 C 110.263 207.157 211.32 131.198 313.04 63.385 C 297.318 62.343 280.081 59.312 272.693 55.808 C 224.864 33.077 175.898 8.641 128.637 -15.037 C 84.691 -37.01 39.324 -59.646 -5.19 -80.956"
        fill="#4CB060"
      />
    </g>
  </svg>
);

const AuthenticationPage = () => {
  const { login } = useAuth();
  const isAuthenticated = useIsAuthenticated();

  if (isAuthenticated) {
    return <Navigate to="/home" replace />;
  }

  return (
    <div className="w-screen h-screen overflow-hidden grid grid-cols-1 md:grid-cols-4">
      {/* Left side (image) - hidden on mobile */}
      <div className="hidden md:block md:col-span-3 h-full shadow-sm shadow-black">
        <img
          src={LoginBanner}
          className="h-full w-full object-cover"
          alt="login-image"
        />
      </div>

      {/* Right side (login form) */}
      <div className="relative flex items-center justify-center h-screen px-6 bg-white md:bg-white text-white overflow-hidden">
        <TriangleGreen className="absolute top-[-40px] left-[-40px] w-48 opacity-80 block md:hidden" />
        <TrianglePattern className="absolute top-[500px] left-[-40px] w-48 opacity-80 block md:hidden" />
        <Pattern5 className="absolute bottom-[-40px] right-[-40px] w-64 opacity-80 block md:hidden" />
        <div className="space-y-4 w-full max-w-sm flex flex-col items-center">
          <h2 className="text-3xl md:text-5xl font-bold text-center text-gray-900 md:text-gray-900">
            Welcome Back
          </h2>
          <p className="text-lg md:text-xl text-gray-900 md:text-gray-500 text-center">
            Sign in with your work account
          </p>
          <Button
            className="flex gap-3 bg-white h-12 my-6 p-2 border w-full border-gray-300 rounded-md hover:shadow-sm hover:shadow-gray-500 text-gray-600 justify-center items-center cursor-pointer"
            onClick={login}
          >
            <img src={MicrosoftLogo} className="w-5 h-5" alt="Microsoft" />
            <span className="">Entrar</span>
          </Button>

          <span className="scribble-lines block md:hidden">
            <svg
              width="97"
              height="111"
              viewBox="0 0 97 111"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                className="scribble-line1"
                d="M23.4069 21.6162C23.6936 20.8168 24.3372 20.0702 25.2184 19.7095C36.5592 15.1299 48.536 12.1317 60.6961 10.9285C62.4911 10.7451 64.0509 12.0563 64.2343 13.8513C64.4177 15.6462 63.1065 17.206 61.3115 17.3894C49.7799 18.5173 38.3889 21.3496 27.6577 25.6967C25.9859 26.3753 24.1684 25.5732 23.4897 23.9014C23.1718 23.1107 23.1441 22.349 23.4069 21.6162Z"
                fill="#EE7D00"
                style={{ opacity: 1 }}
              />
              <path
                className="scribble-line2"
                d="M31.8845 58.3345C31.8845 58.3345 32.0755 57.8015 32.3043 57.5829C40.5649 45.6585 51.7314 35.904 64.66 29.4127C66.2224 28.6197 68.1783 29.2458 68.9713 30.8083C69.7643 32.3708 69.1382 34.3266 67.5757 35.1196C55.6189 41.2075 45.253 50.1966 37.6173 61.2172C36.5776 62.6488 34.5539 63.0509 33.1223 62.0113C31.9332 61.1338 31.4306 59.6003 31.9083 58.2679"
                fill="#EE7D00"
                style={{ opacity: 1 }}
              />
              <path
                className="scribble-line3"
                d="M50.7387 101.712C50.7387 101.712 50.8581 101.379 50.9298 101.179L82.6793 44.2971C83.5429 42.7272 85.5479 42.168 87.0273 43.0744C88.5972 43.9381 89.1803 45.8764 88.25 47.4224L56.5005 104.305C55.6368 105.874 53.6319 106.434 52.1525 105.527C50.7824 104.735 50.1704 103.087 50.696 101.622"
                fill="#EE7D00"
                style={{ opacity: 1 }}
              />
            </svg>
          </span>

        </div>
      </div>

    </div>
  );
};




const AuthenticationPage1 = () => {
  const tenantId = import.meta.env.VITE_APP_TENANT_ID; // Replace with your Tenant ID
  const clientId = import.meta.env.VITE_APP_CLIENT_ID; // Replace with your Client ID
  const redirectUri = encodeURIComponent("https://localhost:3000/home"); // Replace with your redirect URI

  const scope = encodeURIComponent("Calendars.ReadBasic");
  const state = "12345"; // Optional, used for CSRF protection

  const loginUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&response_mode=query&scope=${scope}&state=${state}`;

  const handleLogin = () => {
    window.location.href = loginUrl;
  };

  return (
    <div>
      <h1>Login to Microsoft</h1>
      <button onClick={handleLogin}>Login with Microsoft</button>
    </div>
  );
};


export default AuthenticationPage;
